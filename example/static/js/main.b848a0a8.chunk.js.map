{"version":3,"sources":["components/PlayPauseButton/PlayPauseButton.tsx","components/PlayPauseButton/usePlayPause.ts","components/VideoProgress/VideoProgress.tsx","components/VideoProgress/useProgress.ts","components/VolumeSlider/VolumeSlider.tsx","components/VolumeSlider/useVolume.ts","components/VideoControls/VideoControls.tsx","components/VideoPlayer/VideoPlayer.tsx","components/App/App.tsx","index.tsx"],"names":["PlayPauseButtonRaw","videoRef","useState","paused","setPaused","handleOnPlay","useCallback","handleOnPause","useEffect","current","addEventListener","removeEventListener","onClick","play","pause","usePlayPause","IconButton","PlayArrow","Pause","PlayPauseButton","memo","StyledLinearProgress","styled","LinearProgress","VideoProgressRaw","progress","setProgress","updateProgress","currentTime","duration","parseFloat","toFixed","useProgress","variant","value","VideoProgress","SLIDER_COLOR","StyledVolumeSlider","div","StyledSlider","Slider","fade","StyledSliderContainer","props","open","VolumeIcon","volume","muted","VolumeOff","VolumeMute","VolumeDown","VolumeUp","VolumeSlider","setVolume","setMuted","updateVolume","toggleMuted","prev","changeVolume","onSlide","useVolume","_open","_setOpen","dragging","setDragging","openSlider","closeSlider","toggleMute","e","stopPropagation","stopDragging","window","onMouseEnter","onMouseLeave","preventDefault","Boolean","onMouseDown","orientation","aria-labelledby","onChange","_event","newValue","StyledVideoControls","VideoControlsRaw","VideoControls","StyledVideo","video","VideoPlayerRaw","forwardRef","ref","src","controls","VideoPlayer","StyledApp","StyledSpacer","AppRaw","useRef","Typography","App","theme","createTheme","palette","type","render","StylesProvider","injectFirst","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b848a0a8.chunk.js","sourcesContent":["import { IconButton } from '@material-ui/core'\nimport { Pause, PlayArrow } from '@material-ui/icons'\nimport { memo, FC, RefObject } from 'react'\nimport { usePlayPause } from './usePlayPause'\n\nexport type PlayPauseButtonProps = {\n  videoRef: RefObject<HTMLVideoElement>\n}\n\nexport const PlayPauseButtonRaw: FC<PlayPauseButtonProps> = ({ videoRef }) => {\n  const { paused, onClick } = usePlayPause(videoRef)\n  return (\n    <IconButton onClick={onClick}>\n      {paused ? <PlayArrow /> : <Pause />}\n    </IconButton>\n  )\n}\n\nexport const PlayPauseButton = memo(PlayPauseButtonRaw)\n","import { RefObject, useCallback, useEffect, useState } from 'react'\n\nexport function usePlayPause(videoRef: RefObject<HTMLVideoElement>) {\n  const [paused, setPaused] = useState<boolean>(true)\n\n  const handleOnPlay = useCallback(() => {\n    setPaused(false)\n  }, [])\n\n  const handleOnPause = useCallback(() => {\n    setPaused(true)\n  }, [])\n\n  useEffect(() => {\n    const { current } = videoRef\n    current?.addEventListener('play', handleOnPlay)\n    current?.addEventListener('pause', handleOnPause)\n    return () => {\n      current?.removeEventListener('play', handleOnPlay)\n      current?.removeEventListener('pause', handleOnPause)\n    }\n  }, [videoRef, handleOnPlay, handleOnPause])\n\n  const onClick = useCallback(() => {\n    if (videoRef.current) {\n      if (videoRef.current.paused) {\n        videoRef.current.play()\n      } else {\n        videoRef.current.pause()\n      }\n    }\n  }, [videoRef])\n\n  return { paused, onClick }\n}\n","import { LinearProgress } from '@material-ui/core'\nimport { memo, FC, RefObject } from 'react'\nimport styled from 'styled-components'\nimport { useProgress } from './useProgress'\n\nconst StyledLinearProgress = styled(LinearProgress)`\n  width: 100%;\n`\n\nexport type VideoProgressProps = {\n  videoRef: RefObject<HTMLVideoElement>\n}\n\nexport const VideoProgressRaw: FC<VideoProgressProps> = ({ videoRef }) => {\n  const { progress } = useProgress(videoRef)\n  return <StyledLinearProgress variant=\"determinate\" value={progress} />\n}\n\nexport const VideoProgress = memo(VideoProgressRaw)\n","import { RefObject, useCallback, useEffect, useState } from 'react'\n\nexport function useProgress(videoRef: RefObject<HTMLVideoElement>) {\n  const [progress, setProgress] = useState<number>(0)\n\n  const updateProgress = useCallback(() => {\n    if (videoRef?.current) {\n      const progress =\n        (videoRef.current.currentTime / videoRef.current.duration) * 100\n      setProgress(parseFloat(progress.toFixed(2)))\n    }\n  }, [videoRef])\n\n  useEffect(() => {\n    const { current } = videoRef\n    current?.addEventListener('timeupdate', updateProgress)\n    return () => {\n      current?.removeEventListener('timeupdate', updateProgress)\n    }\n  }, [videoRef, updateProgress])\n\n  return { progress }\n}\n","import {\n  useCallback,\n  useEffect,\n  useState,\n  memo,\n  SyntheticEvent,\n  FC,\n  RefObject,\n} from 'react'\n\nimport { Slider, IconButton } from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles'\nimport { VolumeDown, VolumeMute, VolumeOff, VolumeUp } from '@material-ui/icons'\nimport styled from 'styled-components'\nimport { useVolume } from './useVolume'\n\nconst SLIDER_COLOR = '#ffffff'\n\nconst StyledVolumeSlider = styled.div`\n  pointer-events: all; // fixes bug where leaving button is triggering mouseleave\n  position: relative;\n  text-align: center;\n  display: flex;\n  align-items: center;\n`\n\nconst StyledSlider = styled(Slider)`\n  color: ${SLIDER_COLOR};\n\n  .MuiSlider-thumb.MuiSlider-active {\n    box-shadow: 0px 0px 0px 14px ${fade(SLIDER_COLOR, 0.16)};\n  }\n  .MuiSlider-thumb.Mui-focusVisible,\n  .MuiSlider-thumb:hover {\n    box-shadow: 0px 0px 0px 8px ${fade(SLIDER_COLOR, 0.16)};\n  }\n` as typeof Slider\n\nconst StyledSliderContainer = styled.div<{ open: boolean }>`\n  display: flex;\n  width: ${(props) => (props.open ? 64 : 0)}px;\n  padding: 0 ${(props) => (props.open ? 8 : 0)}px;\n  opacity: ${(props) => (props.open ? 1 : 0)};\n  transition: width 300ms, padding 300ms, opacity 300ms;\n  transition-timing-function: ease-in-out;\n`\n\nconst VolumeIcon: FC<{ muted: boolean; volume: number }> = ({\n  volume,\n  muted,\n}) => {\n  if (muted) return <VolumeOff />\n  if (volume < 33) return <VolumeMute />\n  if (volume < 66) return <VolumeDown />\n  return <VolumeUp />\n}\n\nexport type VolumeSliderProps = {\n  videoRef: RefObject<HTMLVideoElement>\n}\n\nexport const VolumeSlider: FC<VolumeSliderProps> = ({ videoRef }) => {\n  const { volume, muted, onSlide, onClick } = useVolume(videoRef)\n  const [_open, _setOpen] = useState(false)\n  const [dragging, setDragging] = useState(false)\n\n  const handleVolumeChange = (_event: unknown, value: number | number[]) => {\n    const newValue = typeof value === 'number' ? value : value[0]\n    onSlide?.(newValue)\n  }\n\n  const openSlider = useCallback(() => {\n    _setOpen(true)\n  }, [])\n\n  const closeSlider = useCallback(() => {\n    if (!dragging) {\n      _setOpen(false)\n    }\n  }, [dragging])\n\n  const toggleMute = useCallback(\n    (e: SyntheticEvent) => {\n      e.stopPropagation()\n      onClick?.()\n    },\n    [onClick]\n  )\n\n  const stopDragging = useCallback(() => {\n    if (dragging) {\n      setDragging(false)\n    }\n  }, [dragging])\n\n  useEffect(() => {\n    window.addEventListener('mouseup', stopDragging)\n    return () => window.removeEventListener('mouseup', stopDragging)\n  }, [stopDragging])\n\n  return (\n    <StyledVolumeSlider\n      onMouseEnter={openSlider}\n      onMouseLeave={closeSlider}\n      onClick={(e) => {\n        // prevents sending a click to parents after sliding\n        e.stopPropagation()\n        e.preventDefault()\n      }}\n    >\n      <IconButton onClick={toggleMute}>\n        <VolumeIcon volume={volume} muted={muted} />\n      </IconButton>\n      <StyledSliderContainer open={Boolean(_open)}>\n        <StyledSlider\n          onMouseDown={(e) => {\n            setDragging(true)\n            if (muted) {\n              toggleMute(e)\n            }\n          }}\n          orientation=\"horizontal\"\n          value={muted ? 0 : volume}\n          aria-labelledby=\"horizontal-volume-slider\"\n          onChange={handleVolumeChange}\n        />\n      </StyledSliderContainer>\n    </StyledVolumeSlider>\n  )\n}\n\nexport default memo(VolumeSlider)\n","import { RefObject, useState, useCallback, useEffect } from 'react'\n\nexport function useVolume(videoRef: RefObject<HTMLVideoElement>) {\n  const [volume, setVolume] = useState<number>(100)\n  const [muted, setMuted] = useState(true)\n\n  const updateVolume = useCallback(() => {\n    if (videoRef?.current) {\n      setMuted(videoRef.current.muted)\n      setVolume(videoRef.current.volume * 100)\n    }\n  }, [videoRef])\n\n  useEffect(() => {\n    const { current } = videoRef\n    current?.addEventListener('volumechange', updateVolume)\n    return () => {\n      current?.removeEventListener('volumechange', updateVolume)\n    }\n  }, [videoRef, updateVolume])\n\n  useEffect(() => {\n    if (videoRef.current) {\n      // initially sets muted/audio value to the value of the videoRef\n      setMuted(videoRef.current.muted)\n      setVolume(videoRef.current.volume * 100)\n    }\n  }, [videoRef])\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.volume = volume / 100\n    }\n  }, [videoRef, volume])\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.muted = muted\n    }\n  }, [videoRef, muted])\n\n  const toggleMuted = useCallback(() => {\n    setMuted((prev) => !prev)\n    if (volume === 0) {\n      setVolume(100)\n    }\n  }, [volume])\n\n  const changeVolume = useCallback((volume: number) => {\n    setVolume(volume)\n    setMuted(volume <= 0)\n  }, [])\n\n  return {\n    volume,\n    muted,\n    onClick: toggleMuted,\n    onSlide: changeVolume,\n  }\n}\n","import { PlayPauseButton } from 'components/PlayPauseButton'\nimport { VideoProgress } from 'components/VideoProgress'\nimport { VolumeSlider } from 'components/VolumeSlider'\nimport { RefObject, memo, FC } from 'react'\nimport styled from 'styled-components'\n\nconst StyledVideoControls = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nexport type VideoControlsProps = {\n  videoRef: RefObject<HTMLVideoElement>\n}\n\nexport const VideoControlsRaw: FC<VideoControlsProps> = ({ videoRef }) => {\n  return (\n    <StyledVideoControls>\n      <PlayPauseButton videoRef={videoRef} />\n      <VolumeSlider videoRef={videoRef} />\n      <VideoProgress videoRef={videoRef} />\n    </StyledVideoControls>\n  )\n}\n\nexport const VideoControls = memo(VideoControlsRaw)\n","import { forwardRef, memo } from 'react'\nimport styled from 'styled-components'\n\nconst StyledVideo = styled.video`\n  width: 100%;\n`\n\nexport const VideoPlayerRaw = forwardRef<HTMLVideoElement>((props, ref) => (\n  <StyledVideo\n    ref={ref}\n    src=\"http://media.w3.org/2010/05/sintel/trailer.mp4\"\n    controls\n  />\n))\n\nexport const VideoPlayer = memo(VideoPlayerRaw)\n","import { Typography } from '@material-ui/core'\nimport { VideoControls } from 'components/VideoControls'\nimport { VideoPlayer } from 'components/VideoPlayer'\nimport { memo, useRef } from 'react'\nimport styled from 'styled-components'\n\nconst StyledApp = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst StyledSpacer = styled.div`\n  height: 16px;\n`\n\nexport const AppRaw = () => {\n  const videoRef = useRef(null)\n  return (\n    <StyledApp>\n      <Typography variant=\"h3\">Videoplayer Controls</Typography>\n      <StyledSpacer />\n      <VideoPlayer ref={videoRef} />\n      <StyledSpacer />\n      <VideoControls videoRef={videoRef} />\n    </StyledApp>\n  )\n}\n\nexport const App = memo(AppRaw)\n","import { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport { App } from 'components/App'\nimport { CssBaseline } from '@material-ui/core'\nimport {\n  StylesProvider,\n  ThemeProvider,\n  createTheme,\n} from '@material-ui/core/styles'\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n})\n\nrender(\n  <StrictMode>\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </StylesProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}